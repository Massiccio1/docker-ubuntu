name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:


jobs:
  
  build:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - name: check build name
      run: echo ${BUILD}
    - name: check remote build name
      run: echo ${BUILD_REMOTE}
    - name: check docker build command
      run: sudo docker build --help
    - name: check docker push command
      run: sudo docker push --help
    - name: Build the Docker image
      run: sudo docker build -t $BUILD:latest -t $BUILD_REMOTE:latest .

  push_local:
    runs-on: self-hosted
    needs: build
    steps:
    - name: check build name
      run: echo ${BUILD}:latest
    - name: Build the Docker image
      run: sudo docker push ${BUILD}:latest --progress=plain

  push_remote:
    runs-on: self-hosted
    needs: build
    steps:
    -   name: check env
        run: env
    -   name: Login to Docker Hub
        run: echo $DOCKERHUB_TOKEN | sudo docker login -u $DOCKERHUB_USERNAME --password-stdin
    -   name: push to remote
        run: sudo docker push $BUILD_REMOTE:latest

  
  notify:
    runs-on: self-hosted
    needs: [push_local, push_remote]
    steps:
      - name: notify with telegram
        run: >-
          curl -X POST -H 'Content-Type: application/json' -d '{"text":"[GHR]\ndeployed '${BUILD}'"}' $NOTIFY_URL
  
  notify-error:
    runs-on: self-hosted
    needs: [build, push_local, push_remote]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      - name: notify error
        run: >-
          curl -X POST -H 'Content-Type: application/json' -d '{"text":"[GHR]\nRROR in '${BUILD}'"}' $NOTIFY_URL
